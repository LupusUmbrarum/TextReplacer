<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>